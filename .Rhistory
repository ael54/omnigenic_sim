if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor 1 = ", i, " Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor ", i, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 4 - between core and perph"
fd <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="blue", aes(y=genetic.value.4.variance)) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor 1 = ", i, " Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor ", i, sep = ""), y = y.axis.label, size = 25)
}
#Temporary code
pdf("VC.experimental.plot.genetic.value.pdf", width = 50)
print(plot_grid(fa,fb,fc,fd,
nrow = 1, ncol = 4))
dev.off()
#End temporary code
#Make a box plot for Factor A
title.label = "Trait 1 -whole shebang"
fa <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="purple", aes(y=breeding.value.1.variance)) + ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor 1 = ", i, " Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor ", i, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 2 - core component"
fb <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="purple", aes(y=breeding.value.2.variance)) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor 1 = ", i, " Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor ", i, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 3 - peripheral component"
fc <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="purple", aes(y=breeding.value.3.variance)) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor 1 = ", i, " Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor ", i, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 4 - between core and perph"
fd <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="purple", aes(y=breeding.value.4.variance)) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor 1 = ", i, " Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor ", i, sep = ""), y = y.axis.label, size = 25)
}
#Temporary code
pdf("VC.experimental.plot.breeding.value.pdf", width = 50)
print(plot_grid(fa,fb,fc,fd,
nrow = 1, ncol = 4))
dev.off()
#End temporary code
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
this.factor <- 1
this.level
this.factor <- 1
this.level <- 1
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
fb.row.1 <- fb
fc.row.1 <- fc
fd.row.1 <- fd
#Source in some gplot code that will the first row plots; this time for the four genetic values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Genetic_Values_20240716.R")
fa.row.2 <- fa
fb.row.2 <- fb
fc.row.2 <- fc
fd.row.2 <- fd
pdf("VC_Plots/VC.experimental.plot.breeding.value.pdf", width = 50)
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
dev.off()
pdf("VC_Plots/VC.experimental.plot.trait.genetic.breeding.value.pdf", width = 50)
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
dev.off()
#Source in some gplot code that will the first row plots; this time for the four breeding values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Breeding_Values_20240716.R")
fa.row.3 <- fa
fb.row.3 <- fb
fc.row.3 <- fc
fd.row.3 <- fd
#Use the code below as a starting poing for making the figures
pdf("VC_Plots/VC.experimental.plot.trait.genetic.breeding.value.pdf", width = 50)
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
dev.off()
y.axis.label <- paste("log(",this.selection.type, ")",sep = "")
this.min.y.axis <- 0
this.max.y.axis <- log(max(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
fa <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="purple", aes(y=log(breeding.value.1.variance))) + ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level.and.sel.level
y.axis.label <- paste("log(",this.selection.type, ")",sep = "")
this.min.y.axis <- 0
this.max.y.axis <- log(max(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Make a box plot for Factor A
title.label = "Trait 1 -whole shebang"
fa <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.1.variance))) + ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 2 - core component"
fb <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.2.variance))) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 3 - peripheral component"
fc <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.3.variance))) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 4 - between core and perph"
fd <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.4.variance))) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
#Begin temporary
pdf("VC_Plots/VC.experimental.plot.log.trait.value.pdf", width = 50)
print(plot_grid(fa, fb, fc, fd,
nrow = 1, ncol = 4))
dev.off()
log(input.scatter.plot.data$trait.1.variance)
log(0)
plot(fa)
title.label = "Trait 1 -whole shebang"
fa <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.1.variance))) + ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 2 - core component"
fb <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.2.variance))) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 3 - peripheral component"
fc <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.3.variance))) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
title.label = "Trait 4 - between core and perph"
fd <- ggplot(input.scatter.plot.data, aes(x=generation.vector)) +
geom_point(col ="red", aes(y=log(trait.4.variance))) +  ylim(this.min.y.axis,this.max.y.axis) +
if(!is.na(title.label)) {
labs(title = title.label, x=paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""),
y = y.axis.label, size = 25)
}else{
labs(x= paste("Factor = ", this.factor,", Level = ",  this.level, ", Selection = ", this.selection.type, sep = ""), y = y.axis.label, size = 25)
}
plot(fa)
plot(fb)
plot(fc)
plot(fd)
min(log(input.scatter.plot.data$trait.2.variance))
min(input.scatter.plot.data$trait.2.variance)
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level.and.sel.level
y.axis.label <- paste("log(",this.selection.type, ")",sep = "")
this.min.y.axis <- log(min(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
this.max.y.axis <- log(max(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Begin temporary
pdf("VC_Plots/VC.experimental.plot.log.trait.value.pdf", width = 50)
print(plot_grid(fa, fb, fc, fd,
nrow = 1, ncol = 4))
dev.off()
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
#Begin temporary
pdf("VC_Plots/VC.experimental.plot.log.trait.value.pdf", width = 50)
print(plot_grid(fa, fb, fc, fd,
nrow = 1, ncol = 4))
dev.off()
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level.and.sel.level
y.axis.label <- paste("log(Variance):", this.selection.type, ")",sep = "")
this.min.y.axis <- log(min(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
this.max.y.axis <- log(max(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
fb.row.1 <- fb
fc.row.1 <- fc
fd.row.1 <- fd
#Source in some gplot code that will the first row plots; this time for the four genetic values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Genetic_Values_20240716.R")
fa.row.2 <- fa
fb.row.2 <- fb
fc.row.2 <- fc
fd.row.2 <- fd
#Source in some gplot code that will the first row plots; this time for the four breeding values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Breeding_Values_20240716.R")
fa.row.3 <- fa
fb.row.3 <- fb
fc.row.3 <- fc
fd.row.3 <- fd
#Use the code below as a starting poing for making the figures
pdf("VC_Plots/VC.experimental.plot.trait.genetic.breeding.value.pdf", width = 50)
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
dev.off()
unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)
unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1]
#Initialize parameters
all.selection.types <- unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1]
all.seleciton.types
all.selection.types
this.selection.type <- unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1][1]
this.selection.type
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
View(input.scatter.plot.data)
this.selection.types <- unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1][2]
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
View(input.scatter.plot.data)
this.selection type
this.selection.type
this.selection.type <- unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1][2]
this.selection.type
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
View(input.scatter.plot.data)
this.selection.type <- unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1][3]
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
View(input.scatter.plot.data)
pdf("VC_Plots/VC.experimental.plot.trait.genetic.breeding.value.three.selection.types.pdf", width = 50)
#For loop through the different kind of selection/subpopulation levels; index on this.selection.type
for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1]){
#- there will be a different page for each selection/subpopulation level ####
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
y.axis.label <- paste("log(Variance)",sep = "")
this.min.y.axis <- log(min(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
this.max.y.axis <- log(max(input.scatter.plot.data[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
fb.row.1 <- fb
fc.row.1 <- fc
fd.row.1 <- fd
#Source in some gplot code that will the first row plots; this time for the four genetic values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Genetic_Values_20240716.R")
fa.row.2 <- fa
fb.row.2 <- fb
fc.row.2 <- fc
fd.row.2 <- fd
#Source in some gplot code that will the first row plots; this time for the four breeding values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Breeding_Values_20240716.R")
fa.row.3 <- fa
fb.row.3 <- fb
fc.row.3 <- fc
fd.row.3 <- fd
#Use the code below as a starting poing for making the figures
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
}#End for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1])
dev.off()
pdf("VC_Plots/VC.experimental.plot.trait.genetic.breeding.value.three.selection.types.pdf", width = 50)
#For loop through the different kind of selection/subpopulation levels; index on this.selection.type
for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1]){
#- there will be a different page for each selection/subpopulation level ####
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
y.axis.label <- paste("log(Variance)",sep = "")
this.min.y.axis <- log(min(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
this.max.y.axis <- log(max(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
fb.row.1 <- fb
fc.row.1 <- fc
fd.row.1 <- fd
#Source in some gplot code that will the first row plots; this time for the four genetic values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Genetic_Values_20240716.R")
fa.row.2 <- fa
fb.row.2 <- fb
fc.row.2 <- fc
fd.row.2 <- fd
#Source in some gplot code that will the first row plots; this time for the four breeding values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Breeding_Values_20240716.R")
fa.row.3 <- fa
fb.row.3 <- fb
fc.row.3 <- fc
fd.row.3 <- fd
#Use the code below as a starting poing for making the figures
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
}#End for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1])
dev.off()
View(data.for.vc.scatterplot)
#data.for.vc.scatterplot.this.factor.level.and.sel.level <- data.for.vc.scatterplot.this.factor.level[which(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type),]
which(grepl("factor",
colnames(data.for.vc.scatterplot)))                                                                                                            #
repl("factor",colnames(data.for.vc.scatterplot)))
grepl("factor",colnames(data.for.vc.scatterplot))
this.factor.temp <- which(grepl("factor",colnames(data.for.vc.scatterplot)))
this.factor
this.factor.temp
this.factor.temp <- which(grepl("factor",colnames(data.for.vc.scatterplot)))[1]
this.factor.temp
this.factor <- which(grepl("factor",colnames(data.for.vc.scatterplot)))[1]
this.factor
unique(data.for.vc.scatterplot[,this.factor]
)
this.level <- unique(data.for.vc.scatterplot[,this.factor])[1]
this.level
paste("VC_Plots/VC.Factor",substr(colnames(data.for.vc.scatterplot)[this.factor],start = 7,stop = 9),"Level.",this.level,".plot.trait.genetic.breeding.value.three.selection.types.pdf", sep = "")
#For loop through each level of the ith factor - there will be one pdf per factor (maybe create a subdirectory for this); index on "this.level"
#For loop through the different levels of Factor i (columns)
for(this.level in unique(data.for.vc.scatterplot[,this.factor])){
pdf(paste("VC_Plots/VC.Factor",substr(colnames(data.for.vc.scatterplot)[this.factor],start = 7,stop = 9),"Level.",this.level,".plot.trait.genetic.breeding.value.three.selection.types.pdf", sep = ""), width = 50)
#For loop through the different kind of selection/subpopulation levels; index on this.selection.type
for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1]){
#- there will be a different page for each selection/subpopulation level ####
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
y.axis.label <- paste("log(Variance)",sep = "")
this.min.y.axis <- log(min(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
this.max.y.axis <- log(max(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
fb.row.1 <- fb
fc.row.1 <- fc
fd.row.1 <- fd
#Source in some gplot code that will the first row plots; this time for the four genetic values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Genetic_Values_20240716.R")
fa.row.2 <- fa
fb.row.2 <- fb
fc.row.2 <- fc
fd.row.2 <- fd
#Source in some gplot code that will the first row plots; this time for the four breeding values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Breeding_Values_20240716.R")
fa.row.3 <- fa
fb.row.3 <- fb
fc.row.3 <- fc
fd.row.3 <- fd
#Use the code below as a starting poing for making the figures
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
}#End for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1])
dev.off()
}#End for(this.level in unique(data.for.vc.scatterplot[,this.factor]))for loop through each level of the ith factor
this.selection.type
#For loop through each level of the ith factor - there will be one pdf per factor (maybe create a subdirectory for this); index on "this.level"
#For loop through the different levels of Factor i (columns)
for(this.level in unique(data.for.vc.scatterplot[,this.factor])){
data.for.vc.scatterplot.this.factor.level <- data.for.vc.scatterplot[which(data.for.vc.scatterplot[,this.factor] == this.level),]
pdf(paste("VC_Plots/VC.Factor",substr(colnames(data.for.vc.scatterplot)[this.factor],start = 7,stop = 9),"Level.",this.level,".plot.trait.genetic.breeding.value.three.selection.types.pdf", sep = ""), width = 50)
#For loop through the different kind of selection/subpopulation levels; index on this.selection.type
for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1]){
#- there will be a different page for each selection/subpopulation level ####
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
y.axis.label <- paste("log(Variance)",sep = "")
this.min.y.axis <- log(min(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
this.max.y.axis <- log(max(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
fb.row.1 <- fb
fc.row.1 <- fc
fd.row.1 <- fd
#Source in some gplot code that will the first row plots; this time for the four genetic values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Genetic_Values_20240716.R")
fa.row.2 <- fa
fb.row.2 <- fb
fc.row.2 <- fc
fd.row.2 <- fd
#Source in some gplot code that will the first row plots; this time for the four breeding values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Breeding_Values_20240716.R")
fa.row.3 <- fa
fb.row.3 <- fb
fc.row.3 <- fc
fd.row.3 <- fd
#Use the code below as a starting poing for making the figures
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
}#End for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1])
dev.off()
}#End for(this.level in unique(data.for.vc.scatterplot[,this.factor]))for loop through each level of the ith factor
#For loop through the factors; index on "this.factor"
for(this.factor in which(grepl("factor",colnames(data.for.vc.scatterplot)))){
#For loop through each level of the ith factor - there will be one pdf per factor (maybe create a subdirectory for this); index on "this.level"
#For loop through the different levels of Factor i (columns)
for(this.level in unique(data.for.vc.scatterplot[,this.factor])){
data.for.vc.scatterplot.this.factor.level <- data.for.vc.scatterplot[which(data.for.vc.scatterplot[,this.factor] == this.level),]
pdf(paste("VC_Plots/VC.Factor",substr(colnames(data.for.vc.scatterplot)[this.factor],start = 7,stop = 9),"Level.",this.level,".plot.trait.genetic.breeding.value.three.selection.types.pdf", sep = ""), width = 50)
#For loop through the different kind of selection/subpopulation levels; index on this.selection.type
for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1]){
#- there will be a different page for each selection/subpopulation level ####
#Source in the code below that will help make these plots
input.scatter.plot.data <- data.for.vc.scatterplot.this.factor.level[which((data.for.vc.scatterplot.this.factor.level$subpopulation.vector == "Founder")|
(data.for.vc.scatterplot.this.factor.level$subpopulation.vector == this.selection.type) ),]
y.axis.label <- paste("log(Variance)",sep = "")
this.min.y.axis <- log(min(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
this.max.y.axis <- log(max(data.for.vc.scatterplot.this.factor.level[,which(grepl("variance",
colnames(input.scatter.plot.data)))]))
#Source in some gplot code that will the first row plots; this time for the four trait values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Traits_20240715.R")
fa.row.1 <- fa
fb.row.1 <- fb
fc.row.1 <- fc
fd.row.1 <- fd
#Source in some gplot code that will the first row plots; this time for the four genetic values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Genetic_Values_20240716.R")
fa.row.2 <- fa
fb.row.2 <- fb
fc.row.2 <- fc
fd.row.2 <- fd
#Source in some gplot code that will the first row plots; this time for the four breeding values
source("/Users/alipka/Library/CloudStorage/Box-Box/Sabbatical_Roslin_Institute/R_workspace/Sabbatical_Project/Functions_to_Make_Life_Easier/Make_VC_Scatter_Plots_Breeding_Values_20240716.R")
fa.row.3 <- fa
fb.row.3 <- fb
fc.row.3 <- fc
fd.row.3 <- fd
#Use the code below as a starting poing for making the figures
print(plot_grid(fa.row.1, fb.row.1, fc.row.1, fd.row.1,
fa.row.2, fb.row.2, fc.row.2, fd.row.2,
fa.row.3, fb.row.3, fc.row.3, fd.row.3,
nrow = 3, ncol = 4))
}#End for(this.selection.type in unique(data.for.vc.scatterplot.this.factor.level$subpopulation.vector)[-1])
dev.off()
}#End for(this.level in unique(data.for.vc.scatterplot[,this.factor]))for loop through each level of the ith factor
}#End  for(this.factor in grepl("factor",colnames(data.for.vc.scatterplot))) for loop through the factors
72237/3
