stabilizing.subpopulation.QTNs <- pullQtlGeno(pop=disruptive.selection.population,
trait = 1, asRaw = FALSE,
simParam = SP)
combined.subpopulation.QTNs <- rbind(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,stabilizing.subpopulation.QTNs)
#Merge the trait data together from the three different subpopulations
#####The code below is not working...fix it
directional.subpopulation.trait <- directional.selection.population@pheno
row.names(directional.subpopulation.trait) = row.names(directional.subpopulation.SNPs)
disruptive.subpopulation.trait <- disruptive.selection.population@pheno
row.names(disruptive.subpopulation.trait) = row.names(disruptive.subpopulation.SNPs)
stabilizing.subpopulation.trait <- stabilizing.selection.population@pheno
row.names(stabilizing.subpopulation.trait) = row.names(stabilizing.subpopulation.SNPs)
combined.subpopulation.trait <- rbind(directional.subpopulation.trait,
disruptive.subpopulation.trait,stabilizing.subpopulation.trait)
###Save the R workspace
save.image("Test_Run_small_data_set_Quick_Haplo_instead_of_runMacs2_20240314.Rdata")
View(combined.subpopulation.QTNs)
192*3
this.simulated.trait$core.genes
this.simulated.trait$peripheral.genes
#Read in GAPIT
setwd("Scripts_Necessary_for_GAPIT")
source("GAPIT_EMMA source code.txt")
source("GAPIT_Code_from_Internet_20120411_Allelic_Effect.r")
setwd(home.dir)
####Temporary: have the names of the input files handy:
this.myY <- directional.subpopulation.trait
this.myGD <- directional.subpopulation.SNPs #(genotypes)
this.myGM <- the.physical.map.of.QTLs #(map locations)
View(this.myY)
View(this.myGD)
View(this.myGM)
head(row.names(directional.subpopulation.SNPs))
this.myGD <- data.frame(row.names(directional.subpopulation.SNPs),directional.subpopulation.SNPs) #(genotypes)
View(this.myGD)
View(the.phsyical.map.of.QTLs)
View(the.physical.map.of.QTLs)
str(the.physical.map.of.QTLs)
this.myGD <- data.frame(row.names(directional.subpopulation.SNPs),directional.subpopulation.SNPs) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
View(this.myGD)
View(this.myY)
####Temporary: have the names of the input files handy:
this.myY <- data.frame(row.names(directional.subpopulation.trait),
directional.subpopulation.trait)
View(this.myY)
View(this.myY)
View(this.myGD)
View(this.myGM)
this.myY <- data.frame(row.names(directional.subpopulation.trait),
directional.subpopulation.trait)
this.myGD <- data.frame(row.names(directional.subpopulation.SNPs),directional.subpopulation.SNPs) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.myY <- data.frame(row.names(directional.subpopulation.trait),
directional.subpopulation.trait)
this.myGD <- data.frame(row.names(directional.subpopulation.QTNs),directional.subpopulation.QTNs) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- "GWAS_of_directional_subpopulation_QTNs"
#Run a GWAS using a GLM for each subpopulation
#
dir.create(paste(this.name.of.GAPIT.directory))
setwd(paste("/",this.name.of.GAPIT.directory, sep = ""))
paste("/",this.name.of.GAPIT.directory, sep = "")
setwd(paste(this.name.of.GAPIT.directory, sep = ""))
setwd(home.dir)
setwd(paste(this.name.of.GAPIT.directory))
setwd(home.dir)
myGAPIT <- GAPIT(
Y=myY,				#This is phenotype data
GD=myGD,				#This is genotype data,set it to NULL with multiple genotype files
GM=myGM,
PCA.total = 0,
group.from=1,		#Was 232	#Lower bound for number of group
group.to=1,			#Upper bound for number of group
group.by=1,				#range between 1 and number of individuals, smaller the finer
SNP.impute = "Major",
SNP.MAF = 0.00,
cutOff = 0.00,
)
myGAPIT <- GAPIT(
Y=this.myY,				#This is phenotype data
GD=this.myGD,				#This is genotype data,set it to NULL with multiple genotype files
GM=this.myGM,
PCA.total = 0,
group.from=1,		#Was 232	#Lower bound for number of group
group.to=1,			#Upper bound for number of group
group.by=1,				#range between 1 and number of individuals, smaller the finer
SNP.impute = "Major",
SNP.MAF = 0.00,
cutOff = 0.00,
)
#####Read in all of the packages that are necessary
#Read in prerequiste libaries for GAPIT
library('MASS')
library(multtest)
library(gplots)
setwd(paste(this.name.of.GAPIT.directory))
myGAPIT <- GAPIT(
Y=this.myY,				#This is phenotype data
GD=this.myGD,				#This is genotype data,set it to NULL with multiple genotype files
GM=this.myGM,
PCA.total = 0,
group.from=1,		#Was 232	#Lower bound for number of group
group.to=1,			#Upper bound for number of group
group.by=1,				#range between 1 and number of individuals, smaller the finer
SNP.impute = "Major",
SNP.MAF = 0.00,
cutOff = 0.00,
)
setwd(home.dir)
myGAPIT$GWAS
myGAPIT.SNP.and.allelic.effect.estimates <- data.frame(myGAPIT$GWAS$SNP,
myGAPIT$GWAS$Effect.Est)
#
#Obtain the SNP and allelic effect estimates from GAPIT
myGAPIT.QTL.and.allelic.effect.estimates <- data.frame(myGAPIT$GWAS$SNP,
myGAPIT$GWAS$Effect.Est)
View(myGAPIT.QTL.and.allelic.effect.estimates)
#Obtain the SNP and allelic effect estimates from GAPIT
QTL.and.allelic.EE <- data.frame(myGAPIT$GWAS$SNP,
myGAPIT$GWAS$Effect.Est)
a
#Obtain the SNP and allelic effect estimates from GAPIT
QTL.and.add.EE <- data.frame(myGAPIT$GWAS$SNP,
myGAPIT$GWAS$Effect.Est)
View(this.simulated.trait$core.genes)
which(QTL.and.add.EE %in% this.simulated.trait$core.genes$core.genes)
which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
this.simulated.trait$core.genes$core.genes
)
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")
which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")
)
add.EE.of.core.QTNs <-QTL.and.add.EE[which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
View(add.EE.of.core.QTNs)
View(this.simulated.trait$core.genes)
#Obtain the SNP and allelic effect estimates of the core QTN
add.EE.of.core.QTLs <-QTL.and.add.EE[which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
add.EE.of.peripheral.QTLs <-QTL.and.add.EE[-which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
View(add.EE.of.peripheral.QTLs)
#Run a GWAS using a GLM for each subpopulation
list.of.subpopulations <- c("directional.subpopulation",
"disruptive.subpopulation",
"stabilizing.subpopulation")
subpop = list.of.subpopulations[1]
rm(this.myY)
paste(subpop,".trait", sep ="")
paste(subpop,".trait", sep ="")
this.myY <- data.frame(row.names(paste(subpop,".trait", sep ="")),
paste(subpop,".trait", sep =""))
row.names(paste(subpop,".trait", sep =""))
)
row.names(paste(subpop,".trait", sep =""))
subpop
paste(subpop,".trait", sep ="")
#Run a GWAS using a GLM for each subpopulation
list.of.subpopulation.traits <- list(directional.subpopulation.trait,
disruptive.subpopulation.trait,
stabilizing.subpopulation.trait)
View(list.of.subpopulation.traits[1])
View(list.of.subpopulation.traits[[1]])
list.of.subpopulation.traits <- list(directional.subpopulation.trait,
disruptive.subpopulation.trait,
stabilizing.subpopulation.trait)
list.of.subpopulation.QTL <- list(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,
stabilizing.subpopulation.QTNs)
list.of.subpopulation.SNPs <- list(directional.subpopulation.SNPs,
disruptive.subpopulation.SNPs,
stabilizing.subpopulation.SNPs)
names.of.subpopulations <- c("Directional.selection", "Disruptive.selection",
"Stabilizing.selection")
1:length(names.of.subpopulations)
correlations <- list(NA)
add.effect.estimates.QTL <- list(NA)
list.of.subpopulation.traits <- list(directional.subpopulation.trait,
disruptive.subpopulation.trait,
stabilizing.subpopulation.trait)
list.of.subpopulation.QTN <- list(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,
stabilizing.subpopulation.QTNs)
list.of.subpopulation.SNPs <- list(directional.subpopulation.SNPs,
disruptive.subpopulation.SNPs,
stabilizing.subpopulation.SNPs)
names.of.subpopulations <- c("Directional.selection", "Disruptive.selection",
"Stabilizing.selection")
i <- 1
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
View(this.myY)
add.effect.estimates.QTN <- list(NA)
rm(this.myY)
rm(this.myGD)
rm(this.myGM)
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
this.myGD <- data.frame(row.names(list.of.subpopulation.QTN[[i]]),list.of.subpopulation.QTN[[i]]) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- paste("GWAS.of.", names.of.subpopulations[i],
".QTNs",sep = "")
dir.create(paste(this.name.of.GAPIT.directory))
setwd(paste(this.name.of.GAPIT.directory))
myGAPIT <- GAPIT(
Y=this.myY,				#This is phenotype data
GD=this.myGD,				#This is genotype data,set it to NULL with multiple genotype files
GM=this.myGM,
PCA.total = 0,
group.from=1,		#Was 232	#Lower bound for number of group
group.to=1,			#Upper bound for number of group
group.by=1,				#range between 1 and number of individuals, smaller the finer
SNP.impute = "Major",
SNP.MAF = 0.00,
cutOff = 0.00,
)
setwd(home.dir)
#Obtain the SNP and allelic effect estimates from GAPIT
QTL.and.add.EE <- data.frame(myGAPIT$GWAS$SNP,
myGAPIT$GWAS$Effect.Est)
#Obtain the SNP and allelic effect estimates of the core QTN
add.EE.of.core.QTLs <-QTL.and.add.EE[which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
add.EE.of.peripheral.QTLs <-QTL.and.add.EE[-which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
add.effect.estimates.core.QTN <- list(NA)
add.effect.estimates.peripheral.QTN <- list(NA)
add.effect.estimates.core.QTN
add.effect.estimates.core.QTN <- c(add.effect.estimates.core.QTN,  add.EE.of.core.QTLs)
add.effect.estimates.core.QTN <- c(add.effect.estimates.core.QTN,  add.EE.of.core.QTLs)
add.effect.estimates.core.QTN
add.effect.estimates.core.QTN <- list(NA)
add.effect.estimates.core.QTN <- [[NULL]]
add.effect.estimates.core.QTN <- [NULL]
add.effect.estimates.core.QTN <- list()
add.effect.estimates.core.QTN <- c(add.effect.estimates.core.QTN,  add.EE.of.core.QTLs)
add.effect.estimates.core.QTN[1]
add.effect.estimates.core.QTN[[1]]
add.effect.estimates.core.QTN$myGAPIT.GWAS.SNP
View(add.EE.of.core.QTNs)
dim(add.EE.of.core.QTNs)
add.effect.estimates.core.QTN <- list()
View(add.effect.estimates.core.QTN)
View(add.effect.estimates.core.QTN)[1]
add.effect.estimates.core.QTN <- list(NA, NA, NA)
add.effect.estimates.core.QTN
add.effect.estimates.core.QTN[[i]] <- add.EE.of.core.QTLs
View(add.effect.estimates.core.QTN[[i]])
add.effect.estimates.peripheral.QTN <- list(NA, NA, NA)
add.effect.estimates.peripheral.QTN[[i]] <- add.EE.of.peripheral.QTLs
View(add.effect.estimates.peripheral.QTN)
View(add.effect.estimates.peripheral.QTN[[i]])
paste(names.of.subpopulations[i],sep = "")
names(add.effect.estimates.core.QTN)[i] <- paste(names.of.subpopulations[i],sep = "")
View(add.effect.estimates.core.QTN[[1]])
add.effect.estimates.core.QTN <- list(Directional.selection = NA,
Disruptive.selection =NA,
Stabilizing.selection = NA)
add.effect.estimates.core.QTN[[i]] <- add.EE.of.core.QTLs
View(add.effect.estimates.core.QTN$Directional.selection)
add.effect.estimates.peripheral.QTN <- list(Directional.selection = NA,
Disruptive.selection =NA,
Stabilizing.selection = NA)
for(i in 1:length(names.of.subpopulations)){
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
this.myGD <- data.frame(row.names(list.of.subpopulation.QTN[[i]]),list.of.subpopulation.QTN[[i]]) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- paste("GWAS.of.", names.of.subpopulations[i],
".QTNs",sep = "")
dir.create(paste(this.name.of.GAPIT.directory))
setwd(paste(this.name.of.GAPIT.directory))
myGAPIT <- GAPIT(
Y=this.myY,				#This is phenotype data
GD=this.myGD,				#This is genotype data,set it to NULL with multiple genotype files
GM=this.myGM,
PCA.total = 0,
group.from=1,		#Was 232	#Lower bound for number of group
group.to=1,			#Upper bound for number of group
group.by=1,				#range between 1 and number of individuals, smaller the finer
SNP.impute = "Major",
SNP.MAF = 0.00,
cutOff = 0.00,
)
setwd(home.dir)
#Obtain the SNP and allelic effect estimates from GAPIT
QTL.and.add.EE <- data.frame(myGAPIT$GWAS$SNP,
myGAPIT$GWAS$Effect.Est)
#Obtain the SNP and allelic effect estimates of the core QTN
add.EE.of.core.QTLs <-QTL.and.add.EE[which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
add.EE.of.peripheral.QTLs <-QTL.and.add.EE[-which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
add.effect.estimates.core.QTN[[i]] <- add.EE.of.core.QTLs
add.effect.estimates.peripheral.QTN[[i]] <- add.EE.of.peripheral.QTLs
} # End for(subpop in list.of.subpopulations)
i
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
this.myGD <- data.frame(row.names(list.of.subpopulation.QTN[[i]]),list.of.subpopulation.QTN[[i]]) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- paste("GWAS.of.", names.of.subpopulations[i],
".QTNs",sep = "")
View(this.myY)
View(this.myGD)
View(stablizing.subpopulation.QTNs)
View(stabilizing.subpopulation.QTNs)
stabilizing.subpopulation.QTNs <- pullQtlGeno(pop=stablizing.selection.population,
trait = 1, asRaw = FALSE,
simParam = SP)
combined.subpopulation.QTNs <- rbind(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,stabilizing.subpopulation.QTNs)
###Save the R workspace
save.image("Test_Run_small_data_set_Quick_Haplo_instead_of_runMacs2_20240314.Rdata")
list.of.subpopulation.QTN <- list(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,
stabilizing.subpopulation.QTNs)
i <- 3
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
this.myGD <- data.frame(row.names(list.of.subpopulation.QTN[[i]]),list.of.subpopulation.QTN[[i]]) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- paste("GWAS.of.", names.of.subpopulations[i],
".QTNs",sep = "")
dir.create(paste(this.name.of.GAPIT.directory))
setwd(paste(this.name.of.GAPIT.directory))
myGAPIT <- GAPIT(
Y=this.myY,				#This is phenotype data
GD=this.myGD,				#This is genotype data,set it to NULL with multiple genotype files
GM=this.myGM,
PCA.total = 0,
group.from=1,		#Was 232	#Lower bound for number of group
group.to=1,			#Upper bound for number of group
group.by=1,				#range between 1 and number of individuals, smaller the finer
SNP.impute = "Major",
SNP.MAF = 0.00,
cutOff = 0.00,
)
list.of.subpopulation.QTN <- list(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,
stabilizing.subpopulation.QTNs)
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
this.myGD <- data.frame(row.names(list.of.subpopulation.QTN[[i]]),list.of.subpopulation.QTN[[i]]) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- paste("GWAS.of.", names.of.subpopulations[i],
".QTNs",sep = "")
View(this.myY)
View(this.myGD)
stabilizing.subpopulation.QTNs <- pullQtlGeno(pop=stablizing.selection.population,
trait = 1, asRaw = FALSE,
simParam = SP)
stabilizing.subpopulation.QTNs <- pullQtlGeno(pop=stabilizing.selection.population,
trait = 1, asRaw = FALSE,
simParam = SP)
list.of.subpopulation.QTN <- list(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,
stabilizing.subpopulation.QTNs)
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
this.myGD <- data.frame(row.names(list.of.subpopulation.QTN[[i]]),list.of.subpopulation.QTN[[i]]) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- paste("GWAS.of.", names.of.subpopulations[i],
".QTNs",sep = "")
View(this.myY)
View(this.myGD)
list.of.subpopulation.traits <- list(directional.subpopulation.trait,
disruptive.subpopulation.trait,
stabilizing.subpopulation.trait)
list.of.subpopulation.QTN <- list(directional.subpopulation.QTNs,
disruptive.subpopulation.QTNs,
stabilizing.subpopulation.QTNs)
list.of.subpopulation.SNPs <- list(directional.subpopulation.SNPs,
disruptive.subpopulation.SNPs,
stabilizing.subpopulation.SNPs)
names.of.subpopulations <- c("Directional.selection", "Disruptive.selection",
"Stabilizing.selection")
add.effect.estimates.core.QTN <- list(Directional.selection = NA,
Disruptive.selection =NA,
Stabilizing.selection = NA)
add.effect.estimates.peripheral.QTN <- list(Directional.selection = NA,
Disruptive.selection =NA,
Stabilizing.selection = NA)
for(i in 1:length(names.of.subpopulations)){
this.myY <- data.frame(row.names(list.of.subpopulation.traits[[i]]),
list.of.subpopulation.traits[[i]])
this.myGD <- data.frame(row.names(list.of.subpopulation.QTN[[i]]),list.of.subpopulation.QTN[[i]]) #(genotypes)
this.myGM <- data.frame(paste("X", the.physical.map.of.QTLs[,1],sep = ""),
the.physical.map.of.QTLs[,2],
the.physical.map.of.QTLs[,4])#(map locations)
this.name.of.GAPIT.directory <- paste("GWAS.of.", names.of.subpopulations[i],
".QTNs",sep = "")
dir.create(paste(this.name.of.GAPIT.directory))
setwd(paste(this.name.of.GAPIT.directory))
myGAPIT <- GAPIT(
Y=this.myY,				#This is phenotype data
GD=this.myGD,				#This is genotype data,set it to NULL with multiple genotype files
GM=this.myGM,
PCA.total = 0,
group.from=1,		#Was 232	#Lower bound for number of group
group.to=1,			#Upper bound for number of group
group.by=1,				#range between 1 and number of individuals, smaller the finer
SNP.impute = "Major",
SNP.MAF = 0.00,
cutOff = 0.00,
)
setwd(home.dir)
#Obtain the SNP and allelic effect estimates from GAPIT
QTL.and.add.EE <- data.frame(myGAPIT$GWAS$SNP,
myGAPIT$GWAS$Effect.Est)
#Obtain the SNP and allelic effect estimates of the core QTN
add.EE.of.core.QTLs <-QTL.and.add.EE[which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
add.EE.of.peripheral.QTLs <-QTL.and.add.EE[-which(
QTL.and.add.EE$myGAPIT.GWAS.SNP %in%
paste("X", this.simulated.trait$core.genes$core.genes, sep = "")),]
add.effect.estimates.core.QTN[[i]] <- add.EE.of.core.QTLs
add.effect.estimates.peripheral.QTN[[i]] <- add.EE.of.peripheral.QTLs
} # End for(subpop in list.of.subpopulations)
View(add.effect.estimates.core.QTN$Directional.selection)
View(add.effect.estimates.core.QTN$Disruptive.selection)
View(add.effect.estimates.core.QTN$Stablizing.selection)
View(add.effect.estimates.core.QTN$Stabilizing.selection)
1:(length(names.of.subpopulations)-1)
i <- 1
name(add.effect.estimates.core.QTN[[i]])
names(add.effect.estimates.core.QTN[[i]])
j <- i+1
j
subpopulation.a <- add.effect.estimates.core.QTN[[i]]
names.of.subpopulation.a <- names.of.subpopulations[i]
subpopulation.b <- add.effect.estimates.core.QTN[[j]]
names.of.subpopulation.j <- names.of.subpopulations[j]
View(subpopulation.a)
View(subpopulation.b)
colnames(subpopulation.a)
colnames(subpopulation.b)
subpopulations.combined <- merge(subpopulation.a, subpopulation.b,
by.x = myGAPIT.GWAS.SNP,
by.y = myGAPIT.GWAS.SNP)
subpopulations.combined <- merge(subpopulation.a, subpopulation.b,
by.x = "myGAPIT.GWAS.SNP",
by.y = "myGAPIT.GWAS.SNP")
View(subpopulations.combined)
this.spearman.rank.correlation <- cor(subpopulations.combined$myGAPIT.GWAS.Effect.Est.x,
subpopulations.combined$myGAPIT.GWAS.Effect.Est.y,
method = "spearman")
this.spearman.rank.correlation
the.pop.1 <- NULL
the.pop.2 <- NULL
the.spearman.rank <- NULL
the.pop.1 <- NULL
the.pop.2 <- NULL
the.spearman.rank <- NULL
for(i in 1:(length(names.of.subpopulations)-1)){
for(j in (i+1):length(names.of.subpopulations)){
subpopulation.a <- add.effect.estimates.core.QTN[[i]]
names.of.subpopulation.a <- names.of.subpopulations[i]
subpopulation.b <- add.effect.estimates.core.QTN[[j]]
names.of.subpopulation.j <- names.of.subpopulations[j]
subpopulations.combined <- merge(subpopulation.a, subpopulation.b,
by.x = "myGAPIT.GWAS.SNP",
by.y = "myGAPIT.GWAS.SNP")
this.spearman.rank.correlation <- cor(subpopulations.combined$myGAPIT.GWAS.Effect.Est.x,
subpopulations.combined$myGAPIT.GWAS.Effect.Est.y,
method = "spearman")
the.pop.1 <- c(the.pop.1, i)
the.pop.2 <- c(the.pop.2, j)
the.spearman.rank <- c(the.spearman.rank,  this.spearman.rank.correlation )
}# for(j in i:length(names.of.subpopulations))
}#End for(i in 1:length(names.of.subpopulations))
spearman.correlations.between.core.QTNs <- data.frame(c(the.pop.1,
the.pop.2,
the.spearman.rank))
View(spearman.correlations.between.core.QTNs)
the.pop.1
the.pop.2
spearman.correlations.between.core.QTNs <- data.frame(the.pop.1,
the.pop.2,
the.spearman.rank)
View(spearman.correlations.between.core.QTNs)
